#cloud-config
package_update: true
package_upgrade: true

packages:
  - docker.io
  - docker-compose

write_files:
  - path: /opt/sonarqube/docker-compose.yml
    content: |
      version: "3"
      services:
        sonarqube:
          image: sonarqube:lts-community
          container_name: sonarqube
          depends_on:
            - db
          environment:
            SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
            SONAR_JDBC_USERNAME: sonar
            SONAR_JDBC_PASSWORD: sonar
          volumes:
            - sonarqube_data:/opt/sonarqube/data
            - sonarqube_extensions:/opt/sonarqube/extensions
            - sonarqube_logs:/opt/sonarqube/logs
          ports:
            - "9000:9000"
          restart: unless-stopped

        db:
          image: postgres:14
          container_name: postgres
          environment:
            POSTGRES_USER: sonar
            POSTGRES_PASSWORD: sonar
            POSTGRES_DB: sonar
          volumes:
            - postgresql_data:/var/lib/postgresql/data
          restart: unless-stopped

      volumes:
        sonarqube_data:
        sonarqube_extensions:
        sonarqube_logs:
        postgresql_data:

runcmd:
  # Configurar lÃ­mites del sistema para SonarQube
  - echo "vm.max_map_count=524288" >> /etc/sysctl.conf
  - echo "fs.file-max=131072" >> /etc/sysctl.conf
  - sysctl -p
  
  # Agregar usuario al grupo docker
  - usermod -aG docker azureuser
  
  # Iniciar Docker y Docker Compose
  - systemctl enable docker
  - systemctl start docker
  
  # Iniciar SonarQube
  - cd /opt/sonarqube
  - docker-compose up -d
  
  # Esperar a que SonarQube inicie
  - sleep 60